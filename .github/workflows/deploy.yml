name: Deploy to Amazon ECS
on:
  workflow_dispatch:
env:
  ACTION_ROLE: ecs_deploy_gh_actions-gh_actions
  AWS_REGION: ap-northeast-1
  APP_NAME: ecs_deploy_gh_actions
  ECS_CLUSTER: ecs_deploy_gh_actions
  CONTAINER_NAME: app
  ECS_SERVICE: myservice
  ECS_TD: .github/workflows/td.json

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ env.ACCOUNT_ID }}:role/${{ env.APP_NAME }}-gh_actions
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - id: login-dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PWD }}
          
      - id: pull-image
        env:
         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
         ECR_REPOSITORY: ${{ env.APP_NAME }}-${{ env.ECS_SERVICE }}
         DOCKER_REPOSITORY: sheikh111/demo-actions-repo
         IMAGE_TAG: "v2.1.0"
        run: |
          docker pull $DOCKER_REPOSITORY:$IMAGE_TAG
          docker tag $DOCKER_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          
      - id: docker-to-ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ steps.login-ecr.outputs.registry }}
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
      - id: push-image
        env:
         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
         ECR_REPOSITORY: ${{ env.APP_NAME }}-${{ env.ECS_SERVICE }}
         DOCKER_REPOSITORY: sheikh111/demo-actions-repo
         IMAGE_TAG: "v2.1.0"
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def-1
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TD }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.pull-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def-1.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
