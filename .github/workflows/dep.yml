name: "Terraform_test"

on:
  workflow_dispatch:

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    outputs:
      image_version: ${{ steps.terraform_outputs.outputs.image_version }}
    defaults:
      run:
        working-directory: ./terraform
    permissions:
      id-token: write # This is required for aws oidc connection
      contents: read # This is required for actions/checkout
      pull-requests: write # This is required for gh bot to comment PR
    env:
     TF_LOG: INFO
     AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM

      - name: file permissions
        env:
           USERNAME: ${{secrets.DOCKER_USERNAME}}
           PASSWORD: ${{secrets.DOCKER_PWD}}
        run: | 
             chmod +x ../terraform/commands/install_docker.sh
             chmod +x ../terraform/commands/pull_push.sh
        shell: bash

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
                  
      - name: Terraform Init
        id: init
        run: terraform init  -backend-config="access_key=${{secrets.AWS_ACCESS_KEY_ID}}" -backend-config="secret_key=${{secrets.AWS_SECRET_ACCESS_KEY}}"
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
     

      - name: Terraform Plan
        id: plan
        run: terraform plan  -no-color -input=true 
        continue-on-error: true

      

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: | 
            terraform apply -auto-approve
             
        
      - name : Terraform outputs
        id: terraform_outputs
        run: |
             echo $(terraform-bin output -raw image_version)
             echo "image_version=$(terraform-bin output -raw image_version)">>"$GITHUB_OUTPUT"
