name: "Terraform_test"

on:
  workflow_dispatch:

jobs:
  terraform:

    name: "Terraform"
    runs-on: ubuntu-latest

    outputs:
      image_version: ${{ steps.terraform_outputs.outputs.image_version }}

    defaults:
      run:
        working-directory: ./terraform

    permissions:
      id-token: write # This is required for aws oidc connection
      contents: read # This is required for actions/checkout
      pull-requests: write # This is required for gh bot to comment PR

    env:
     #TF_LOG: INFO
     AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      #- name: Install AWS CLI v2
        #run:  |
             #curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o /tmp/awscliv2.zip
             #unzip -q /tmp/awscliv2.zip -d /tmp
            # rm /tmp/awscliv2.zip
             #sudo /tmp/aws/install --update
             #rm -rf /tmp/aws/
             
      - name: Install AWS CLI second approach 
        run: |
              curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
              unzip awscliv2.zip
              sudo ./aws/install
             
      #- name: Add profile credentials to ~/.aws/credentials
        #run: |
           #aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID}} --profile user1
           #aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile user1

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v2
        with:
          
          #aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          #aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
          role-to-assume: arn:aws:iam::628034938073:role/github_actions_role #${{ secrets.AWS_ROLE }}
          role-session-name: GitHub-OIDC-TERRAFORM
          aws-region: ${{secrets.AWS_REGION}}    

      - name: file permissions
        env:
          SOURCE: sheikh111/demo-actions-repo:v23.0.1
          #AWS_TOKEN: eyJwYXlsb2FkIjoiVVJVakJnanV6Qm9XSUZFVHNhb1E5OG5oMEpuUEpjRnhwTUR6aUtJYmFUblBQTzI5MTBQdmkzOVl5V2tMRDkrY3lwb2ZmUFBSdTE1Y3ZsT3hGYk1OWXNWY0F3ajZNeGhhY1NSdUJSTHJnOTdtWTRWOGtFM2w0MmZJSEVkbDk2d2I3b2dEYmYyMDBtYk9sNWMzVDNlL1p6UTBqWS9hY1kwdlB3emZOQnBmOWlTUjVLQ2F5b3JqVlI3YVJvSXU1bStKSC91RDNPZ3FVbmlGbmdNNXFzY1hUS28vNFZIdHJmOGl2Q3ByUEY4bEVvQUxlMnVUVzhWelpndlhCbHNsdjE5TFdBaFpucW1SWU5BSysybE5DWE1WeXZiOEVTS2R1Zm9MOTJWK25FWC9mb3JBSWFkcVA1TVUvTklWL0krZWVadUtpTUZuTTJHODdIY3FnOFpmYVNNYm16akRaNjhtSEM3Q1BFczBnREthZUNjT2swb1dya1RVek9Eb29IelRTT0JrbTVIUzIvNHhoalI0Z1pGM1FQeEdnaHBJK1A4VW5GVDFQODF3YjhMZE0ybkg3RVd6SDVJS0NtR2h2aWdEZDZDVUNwNDR2NU5jY3NOaWYyQVdDU29leUZUbHcwSVRieCtac2lQVkhsdkpjQXpDTVZ2dURkWVJsYmtqc2M5b1NSTlZISjR1L2dpMUpDS1BmWGdvaWdQM3Q0dXAveVZ3Q3NsQ0pMTXpJdG1HdGRlSlBGWmJXV0YwK3hOYlp0bTZrUnM2U2JzbjczU3FRZUp5WTBIR05ncFFJZkZCa1pVRzg3U3hVYTRKQmgva2tybFMvSDFvODB0Rzl1OExCemZFNlAvRnRRTlRaeVRsRVZ5M0JwSFAxUWdITmRnZ0YyRkgyaWlMeUZ1bCtBclljQU5oNzdQNlRsMkZtSnhQTmoyTUNxZXFIQS9BQndON1BobHVqN2xzR2cwVjRJTEpxL2hGOSswdlhZSzZwbTZYb0M0VXNVangvdElLa3EzUnZTWkNsTUxDVFN4WHorVEU1bE5BQ0VRSStROUtzamRuWEhTaW1ZRysvbFhoeWFGdExMbXZtL2xFUFhaOGVMSXlRWHlpWHpZR01idjhWSnVyc0hRV3FLdjZQRk1TZ2d6WGZ5NW9xcXhjQ2QrVVE2dkdZL05CTEdPM3c5akVPLytJVnJhdERRdkZVQkx6akNhUWtKdHFYRmRHN25zQkxFZVQ5ZjBIeFdaYjVYN1ZoQzFoVXJkK0ZlZ29qMGNsUFU3OUFtb2xvd21HZnExWllOWjBzaXdvSW03SDJRanhZVkRjRnF2MzM3Z0Z3RHBwNnNLVVJXWkNPalJIRmtRZXE2UUtYUldnOUM2ZVgxemNwOU9KNEViTSIsImRhdGFrZXkiOiJBUUlCQUhoQU9zYVcyZ1pOMDlXTnROR2tZYzhxcDExeFNoWi9kckVFb3kxSGs4TFhXZ0hmdnpIUTdENWZkU0VrMWNncTRremxBQUFBZmpCOEJna3Foa2lHOXcwQkJ3YWdiekJ0QWdFQU1HZ0dDU3FHU0liM0RRRUhBVEFlQmdsZ2hrZ0JaUU1FQVM0d0VRUU00U0kwSlo5Z0NPN1JmWDFuQWdFUWdEc0k0cXVlMUhlNWFLVEhESFhxUHlNNExkQm9Fa0ppUDJlOUcvdldQS2dFclBaUnIxZmJzWkNjTGU4WWtnSmNQWC9Va3lPeHNLN09nWlZIYmc9PSIsInZlcnNpb24iOiIyIiwidHlwZSI6IkRBVEFfS0VZIiwiZXhwaXJhdGlvbiI6MTY4MDIwMzIxMX0=
        run: | 
             chmod +x ../terraform/commands/install_docker.sh
             chmod +x ../terraform/commands/pull_push.sh
             ../terraform/commands/pull_push.sh $SOURCE
            
        shell: bash

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
                  
      - name: Terraform Init
        id: init
        env:
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET}}
          AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY}}
        run: terraform init 
        #-backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"

      #- name: Terraform destroy
        #run: |
             #terraform destroy -auto-approve
             #exit 1

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan  -no-color -input=true 
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      
      #- name: Wait for approval
        #uses: trstringer/manual-approval@v1
        #with:
         #secret: ${{secrets.GH_TOKEN }}
         #approvers: kppilot
         #minimum-approvals: 1
         #issue-title: "Approve deployment in ${{ github.ref_name }}"
         #exclude-workflow-initiator-as-approver: true
         #timeout-minutes: 10

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: | 
            terraform apply -auto-approve
             
        
      - name : Terraform outputs
        id: terraform_outputs
        run: |
             echo $(terraform-bin output -raw image_version)
             echo "image_version=$(terraform-bin output -raw image_version)">>"$GITHUB_OUTPUT"
