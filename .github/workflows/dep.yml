name: "Terraform_test"

on:
  workflow_dispatch:

jobs:
  terraform:

    name: "Terraform"
    runs-on: ubuntu-latest

    outputs:
      image_version: ${{ steps.terraform_outputs.outputs.image_version }}

    defaults:
      run:
        working-directory: ./terraform

    permissions:
      id-token: write # This is required for aws oidc connection
      contents: read # This is required for actions/checkout
      pull-requests: write # This is required for gh bot to comment PR

    env:
     #TF_LOG: INFO
     AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Install AWS CLI v2
        run:  |
             curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o /tmp/awscliv2.zip
             unzip -q /tmp/awscliv2.zip -d /tmp
             rm /tmp/awscliv2.zip
             sudo /tmp/aws/install --update
             rm -rf /tmp/aws/
             
      #- name: Add profile credentials to ~/.aws/credentials
        #run: |
           #aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID}} --profile user1
           #aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile user1

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::628034938073:role/github_actions_role #${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM    

      - name: file permissions
        env:
         SOURCE: sheikh111/demo-actions-repo:v23.0.1
         AWS_TOKEN: eyJwYXlsb2FkIjoiZUQ3SHlBa3RqaGFpbWc1MUZVbFh4UjkzMy90UlpBTXBjbVJSMTdlOWI2R0thN29CcTZ6THdXdUtsaUJTcEdnUEQra25PTUxBazNSempUZnIwOHZLUDhQWS9EU3RWYzkyU3FTWnNWU1FqSkZZbTQwWWVJa1pTeUtSN0xoS0V2T3A2RENrbktGOEtQM1BBQzNyNjM4eE1kQk5WaVVncVVZc0JOTW1MYzYzNXNFSnpYdnIxQmR1TWwxaXFQNFV2YTlLL09Db3k5Uk41Y0ZCL1ovbXBpT21OSjVWRzZSYWo1U0dHNjhqalhQcE96UzlLOThqQk4yVXhLeHlhM1NwQlpyK0t1WXlMM1RLeVBPS3J2M2ZpWWk3dDJyeFcwVEcvc2dPYjN2QjR2eVo3cytORXNTRUZ6eDlDMmdqZDhvMFArYVk4S1A2cXBlVldjU2pEemZEUE5HcmdzUURPSmMrRXFJMFRWR1BMUkg5RlBhbmhKRmVQK2FzbHZKY2JFQ2lTdnhVSjNPcDhBMHZpQk9kMGY5ZkZ5V0dUalJESytJV0JqWXNleFhhTXFLNEdsT0VWZVFZQlJuSmp2Y0kwU2dMNnYzSUJSaFVwbzNtSjhpN242NHhUTXc1OFdYN2Q5bWdkVmZUMDNZbGVWMXBBb0x0aWNpcEdFTVlBanlkd2E4aGNFZFRGNXFoL0Z5T2ZBVHhoZ1BubmVQSlBUMklCaHp5U294OGNVa0hiK1V5d2Z3RnEyRlMxYnhSV0lrbGY4UlNVNTBhU04wZ0JFVUpMaDMvZEtIYWo0NXlhc3F2TmM1MTBhMGN4NnJLSTU0clhSem5YcGs0Umd4aktIdmRObTRsN2VzTzdJYkpXZHZpdGNwL3l4SXdWcnhZUU5JRWswYThTV2wweG1JNkh3VVc2YnNuankrWWdqWnB3VnpFVTRxWUhwUmZTdE02aXRqV3ZmUmtHbU1DUTRUa2Fyd2pRemhIbUNFRDlBYXRob1ovWmY2azdjT2lFTVZUV3BMNkMyMTBVT3dneUw4SE1wM05FZjFGVkxoeDBEN1ZMbm1UaS9lUU9NZDExMDlBNUlGTFVZTWxXZklIODkwWndKVTNvMlBZQTJwWXRGT2RJbW5YVjBRSmp6dVQ0cXdmUHV0dVkvanpKZXB1VFR5SGlkZXpWS1ZxQU5kK01qOS8vNXlEMDhQTjAveU5TUDVTaE8yU1RtVkdmR3FsSXYvNnU2VlE2WnJPSTdQSk5CcU1aeDFTTzB2NVJFWFVnVm55clFSeDAxTklDZFFieVJFbVZoRmFNTG9Ha3U5WkxUN21yR3hqZ1pDZ3BsVjVhZmh6MU4zYVdKQmlRSVBuUEFnU3Z6b2lBUlJUeHF1S3BhWjZrREpnSWJPaCIsImRhdGFrZXkiOiJBUUlCQUhoQU9zYVcyZ1pOMDlXTnROR2tZYzhxcDExeFNoWi9kckVFb3kxSGs4TFhXZ0hDN1BqK2tPdHA0S2pJU1R1eTd6RGJBQUFBZmpCOEJna3Foa2lHOXcwQkJ3YWdiekJ0QWdFQU1HZ0dDU3FHU0liM0RRRUhBVEFlQmdsZ2hrZ0JaUU1FQVM0d0VRUU1ZeERpa2dRb2RLNUYrMnFVQWdFUWdEdWV1aEZjQTk1TVIyTlFDUDVOU2h0RmFCb1kzNmZKNE9iMmxCb2lsT1cxbzJRbldWeWdQNTZ3TTgwZHpVeUtzQkFOeFIyQUVYd0pQTXJiNlE9PSIsInZlcnNpb24iOiIyIiwidHlwZSI6IkRBVEFfS0VZIiwiZXhwaXJhdGlvbiI6MTY4MDIwMzA3N30=


        run: | 
             chmod +x ../terraform/commands/install_docker.sh
             chmod +x ../terraform/commands/pull_push.sh
             ../terraform/commands/pull_push.sh $SOURCE $AWS_TOKEN
            
        shell: bash

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
                  
      - name: Terraform Init
        id: init
        env:
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET}}
          AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY}}
        run: terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"

      #- name: Terraform destroy
        #run: |
             #terraform destroy -auto-approve
             #exit 1

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan  -no-color -input=true 
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      
      #- name: Wait for approval
        #uses: trstringer/manual-approval@v1
        #with:
         #secret: ${{secrets.GH_TOKEN }}
         #approvers: kppilot
         #minimum-approvals: 1
         #issue-title: "Approve deployment in ${{ github.ref_name }}"
         #exclude-workflow-initiator-as-approver: true
         #timeout-minutes: 10

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: | 
            terraform apply -auto-approve
             
        
      - name : Terraform outputs
        id: terraform_outputs
        run: |
             echo $(terraform-bin output -raw image_version)
             echo "image_version=$(terraform-bin output -raw image_version)">>"$GITHUB_OUTPUT"
